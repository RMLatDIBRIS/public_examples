// iterator2: single iterator, weak version

// works with traces generated from iterator.js
// verifies only that next occurs immediately after hasNext(true) and that the result of hasNext can change only after next
// multiple consecutive occurrences of hasNext are allowed, as long as they are coherent
// the iterator is not required to be fully consumed

hasNext(res) matches {event:'func_post',name:'hasNext',res:res,args:[]};
next matches {event:'func_pre',name:'next',args:[]};

relevant matches hasNext(_) | next;

Main = relevant >> Iterator!;

Iterator = (hasNext(true)+ next)* hasNext(false)+;

// Main = relevant >> Iterator;
// Iterator = hasNext(true)+ (next Iterator)? \/ hasNext(false)*; // more complex version
